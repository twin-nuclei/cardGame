{"version":3,"sources":["js/modules/details.js","js/modules/overview.js","js/modules/cards.js","js/modules/controls.js","js/main.js"],"names":["selectedCard","displayInDetailView","event","details","document","getElementById","innerText","cards","JSON","parse","sessionStorage","getItem","filter","item","id","toString","currentTarget","cardCopy","onclick","length","className","appendChild","createCardOverview","allCards","overview","getElementsByClassName","innerHTML","requestAnimationFrame","forEach","card","markSelectedCardAndRefreshOverview","previousSelectedCard","setItem","players","saveToSession","dataAllCards","stringify","addIdToCardData","map","player","createCard","cardData","createElement","addCardContent","listGroup","prop","element","createCards","data","requestCardData","url","Promise","resolve","reject","request","XMLHttpRequest","open","onload","response","console","log","responseText","onerror","responseType","send","getCardData","getAndSaveCardDataToSession","then","cardElements","createControls","parent","ascendingButton","createAscendingButton","descendingButton","createDescendingButton","submitButton","createSubmitButton","button","createOverviewAscending","createOverViewDescending","submit","sortAscending","sortDescending","slice","sort","compare","reverse","selectedCardId","allCardsData","selectedCardData","myHeaders","Headers","myRequest","Request","method","headers","mode","body","cache","fetch","resp","submitModal","removeItem","catch","error","test","status","messageText","modal","span","message","style","display","window","target","a","b","realName"],"mappings":";;AIAA;;AACA;;AACA;ADFA,AHAA,ACEA,IAAIO,KAAJ;AGEA,IAAM2C,GAAG,GAAG,qBAAZ;AAGA,AFPA,ACEA,AHAA,ACEA,IEFIkB,AHAApE,KCEKsB,OEFT,AHAA,WCEA,CAA4BC,QAA5B,EAAsC,IGIjC4C,IADL,CACU,YAAM;AACRzD,AHJJH,EGIIG,AHJJH,KAAK,GAAGgB,MGIU,CAAC+E,CHJnB,SGII,CAA0B,gBAA1B;AACA,AFTR,ACGA,AHAA,ACEI,MGIU/F,AHJNiB,GEFC6C,AHAApE,EIMU,GAAG,AHJN,GAAGG,MEFnB,CAAwBG,CFEG,CAACkB,EDF5B,CGAA,AHA6BvB,EGAE,GHA/B,EAAoC,EIMFM,IAAI,CAACC,KAAL,AHJf,CGI0BC,AHJM,cGIQ,AHJxC,CGIyCC,AHJxD,OGIyC,CAAuB,cAAvB,CAAX,CAAZ,CAAd;AACA,ADNJyD,AHAA,ACEA5C,EEFA4C,AFEA5C,IDFIrB,ICEI,CAAC,CAAD,CDFG,ACEX,CEFY,AFEAuB,EDFEtB,CGACG,KAAf,CFEA,CDFsB,CAACF,CCEC,EAAxB,QGIuBE,GJNT,CAAwB,CIMlC,QJNU,CAAd;AIOI,ADNJ,AHAAJ,ACEAwB,EDFAxB,ACEAwB,IEFI2C,GHAG,CAAChE,EGAE,GAAGF,IHAb,GAAoB,CGAC,AFEA,CEFCC,AHAtB,ACEsB,QGIHE,IHJS,CGIxB,CDNS,CAAwB,UAAxB,CAAb;ACOC,ADND,AHAA,ACEIA,CGFR,GHEQA,EEFAgE,AHAAhE,GCEK,CAACqB,CDFD,GAAGpB,GCER,CDFY,ACEE,CDFDC,EGAE,GAAG+D,AHAV,CAAW9D,GCELmB,IAAI,ODFe,CAAClB,KGAK,EAA3C,AHAuB,CAAuB,cAAvB,CAAX,CAAZ;AGCA,AHAAX,ACCsB,EDDtBA,IGAIyE,OFCsBjD,CDDd,GAAGjB,ICCmB,CEDd,AHAA,ACCe,CDDdK,ACCa,CAAR,CEDH8D,AFCerD,IDDvB,CAAa,MCCF,CAAwBQ,GDDtBhB,CCCF,CAAJ,EDDU,GGAa,EAA7C;AACA,AHDgC,ACCV,KAAlB,CEAA8D,KHDgC9D,IAAI,CAACC,EGCzB,AHDoB,CAAQC,EGCzB6D,MHDiB,OAAuB1E,KGCtB,AHD2B,CAACc,CGCjE,YHD2D,CAAoBF,EAA/C;AGEhCwD,AHFgC,ACCyB,EECzDA,CHFe,ACAM,CDArB,ACAA,IEEM,CAACjD,WAAP,CAAmBkD,eAAnB;AACAD,AHFA,ACCH,EECGA,IHFIrD,EGEE,CAACI,KHFK,GAAG,GGEf,CAAmBoD,gBAAnB,GHF0BzE,YAAY,CAAC,CAAD,CAAvB,CAAf;AENJ,ACSIsE,EAAAA,EDTErC,ICSI,CAACZ,EDTE,GAAG,CACd,KCQE,CAAmBsD,YAAnB;ADRD,ACSF,AHHG1D,ACEJ,EDFIA,OCEKa,CDFG,CAACZ,GENE,IFMX,GAAmB,SENrB,GFM2B,CAAE,CAA3B,QCEJ,CAA4ChB,KAA5C,EAAmD;ACRlB,ADS7B,MAAIQ,UCTuC,IDSzB,CAACC,OAAf,CAAuB,cCT7B,EDSM,CAAJ,EAA8C;ACT0B,ACW5E,AHJIM,ACGI,EDHJA,MCGQc,CECHyC,CHJG,CEPyE,AFOxE1D,EAAT,GAAcP,KAAK,CAACY,MAAN,ACGc,EEChC,CHJiC,ACGEf,CDH/B,CGI6B,MFDU,CAACC,cAAT,CAAwBK,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAxB,CAA3B;ACVN,ACYE,AHJAM,ACGIc,CCZQ,CFSZd,CEPF,CDUMc,EECA8C,IHJI,CAACzD,CGIC,GAAGhB,KHJb,GGIqB,AHJA,CGICsC,AFDE,CAACtB,SAArB,GECS,AFDwB,CECD,QAAvB,CAAb,iCHJA,SCGI;ACVL,ACYCyD,AHJA1E,ACGC,EECD0E,AHJA1E,MGIM,CAACiB,AHJA,CAACC,IERG,ICYX,GAAmB,AHJnB,CAAoBJ,QAApB,IERF,MCYE;ADZiC,ACajC4D,AHJH,EGIGA,MAAM,CAACnD,ODbwC,ECa/C,GAAmB,QDbrB,QCaE;ADb8D,ACc9DmD,AFFA,EEEAA,IFFI7E,EEEE,CAACc,EDdgE,ACcvE,GAAY,IFFI,GAAGV,EEEnB,MFF2B,CAACC,cAAT,CAAwBH,KAAK,CAACc,aAAN,CAAoBF,EAA5C,CAAnB;ACZF,ACeE+D,AFFA7E,CCfY,CCiBZ6E,AFFA7E,CCZF,KCcQ,CAACkB,KFFK,CAAC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","file":"main.fb6bbcaf.js","sourceRoot":"../src","sourcesContent":["import { createCard } from \"./cards.js\";\n\nlet selectedCard;\n\nfunction displayInDetailView(event) {\n    let details = document.getElementById('details');\n    details.innerText = '';\n    let cards = JSON.parse(sessionStorage.getItem('dataAllCards'));\n    selectedCard = cards.filter(item => item.id.toString() === event.currentTarget.id);\n    let cardCopy = createCard(selectedCard[0]);\n    cardCopy.onclick = () => {};\n    cardCopy.id = cards.length + 1;\n    cardCopy.className = 'cardCopy card-body col-12 border border-primary rounded';\n    details.appendChild(cardCopy);\n}\n\n\nexport { displayInDetailView };","\n\nlet cards;\n\nfunction createCardOverview(allCards) {\n    cards = allCards;\n    let overview = document.getElementsByClassName('overview-row');\n    overview[0].innerHTML = ''\n    requestAnimationFrame(() => {\n        cards.forEach(card => overview[0].appendChild(card))});\n}\n\nfunction markSelectedCardAndRefreshOverview(event) {\n    if (sessionStorage.getItem('selectedCardId')) {\n        let previousSelectedCard = document.getElementById(sessionStorage.getItem('selectedCardId'))\n        previousSelectedCard.className = 'card card card col-4 border border-primary rounded';\n    }\n    let selectedCard = document.getElementById(event.currentTarget.id);\n    selectedCard.className = 'card card col-4 border border-primary rounded';\n    sessionStorage.setItem('selectedCardId', event.currentTarget.id);\n}\n\n\nexport { createCardOverview, markSelectedCardAndRefreshOverview };","import {displayInDetailView} from \"./details.js\";\nimport {markSelectedCardAndRefreshOverview} from \"./overview.js\";\n\nconst players = [\n  {\"realName\": \"Brianna Forbes\", \"playerName\": \"Dreamlurk The Unstoppable\", \"asset\": \"Foghammer Lead\"},\n  {\"realName\": \"Darcy Candice Ball\", \"playerName\": \"Crystaldash\", \"asset\": \"Secret Glowquake Gold\"},\n  {\"realName\": \"Hillary Gibbs\", \"playerName\": \"Speedsoul\", \"asset\": \"Shifting Rainshadow Iron\"},\n  {\"realName\": \"Elva Becky Hammond\", \"playerName\": \"Seekvenom The Mystic\", \"asset\": \"Valkyries' Opal Adamant\"},\n  {\"realName\": \"Enid Rose\", \"playerName\": \"Coincurse The Ghoul\", \"asset\": \"Jewelevil Bronze Of Goddesses\"},\n  {\"realName\": \"Esmeralda Carrillo\", \"playerName\": \"Skulldart\", \"asset\": \"Yellow Orichalcum Of Paladins\"}\n];\n\nfunction saveToSession(dataAllCards) {\n    sessionStorage.setItem('dataAllCards', JSON.stringify(dataAllCards));\n}\n\nfunction addIdToCardData (players) {\n    return players.map((player, id) => ({\n            'id': id,\n            ...player\n        })\n    )\n}\n\nfunction createCard(cardData) {\n    let card = document.createElement('div');\n    card.className = 'card col-4 border border-primary rounded';\n    addCardContent(card, cardData);\n    card.onclick = event => { displayInDetailView(event); markSelectedCardAndRefreshOverview(event)};\n    return card;\n}\n\n\nfunction addCardContent(card, cardData) {\n    let listGroup = document.createElement('ul');\n    listGroup.className = 'list-group list-group-flush';\n    card.appendChild(listGroup);\n    for (let prop in cardData) {\n        if (prop !== 'id') {\n            let element = document.createElement('li');\n            element.innerHTML = prop + ': ' + cardData[prop];\n            card[prop] = cardData[prop];\n            element.className = 'cardElement list-group-item';\n            listGroup.appendChild(element);\n        }\n        card.id = cardData.id;\n    }\n}\n\nfunction createCards(dataAllCards) {\n    return dataAllCards.map(data => createCard(data));\n}\n\nconst requestCardData = (url) => {\n    return new Promise( function (resolve, reject) {\n        let request = new XMLHttpRequest();\n        request.open('GET', url);\n        request.onload = (response) => {\n            console.log(request);\n            resolve(JSON.parse(request.responseText));\n        };\n        request.onerror = () => reject(request.response)\n        request.responseType = 'text';\n        request.send();\n    })\n};\n\nfunction getCardData() {\n    return new Promise( function (resolve, reject) {\n        resolve(players);\n    })\n}\n\nconst getAndSaveCardDataToSession = () => {\n    return getCardData()\n        .then(dataAllCards => addIdToCardData(dataAllCards))\n        //todo: ich dachte ich muss hier json.strinify benutzen, wenn ich das aber mache, bekomm ich später nach\n        // json.parse wieder einen string zurück. Muss das nicht serialisiert werden, um es in der session zu speichern?\n        .then(dataAllCards => saveToSession(dataAllCards));\n}\n\nexport { createCard, createCards, getAndSaveCardDataToSession };","import {createCardOverview} from \"./overview.js\";\n\nlet cardElements;\n\nfunction createControls(cards) {\n    cardElements = cards;\n    let parent = document.getElementById('controls');\n    let ascendingButton = createAscendingButton();\n    let descendingButton = createDescendingButton();\n    let submitButton = createSubmitButton();\n    parent.appendChild(ascendingButton);\n    parent.appendChild(descendingButton);\n    parent.appendChild(submitButton);\n}\n\nfunction createAscendingButton() {\n    let button = document.createElement('button');\n    button.className = 'btn btn-secondary';\n    button.innerHTML = \"Sort Ascending\";\n    button.id = \"sortAsc\";\n    button.onclick = createOverviewAscending;\n    return button;\n}\n\nfunction createDescendingButton() {\n    let button = document.createElement('button');\n    button.className = 'btn btn-secondary';\n    button.innerHTML = \"Sort Descending\";\n    button.id = \"sortDesc\";\n    button.onclick = createOverViewDescending;\n    return button;\n}\n\nfunction createSubmitButton() {\n    let button = document.createElement('button');\n    button.className = 'btn btn-danger';\n    button.innerHTML = \"Submit\";\n    button.id = \"submit\";\n    button.onclick = submit;\n    return button;\n}\n\nfunction createOverviewAscending() {\n    createCardOverview(sortAscending());\n}\n\nfunction createOverViewDescending() {\n\n    createCardOverview(sortDescending());\n}\n\nfunction sortAscending() {\n    return cardElements.slice().sort(compare);\n}\n\nfunction sortDescending() {\n    return sortAscending().reverse();\n}\n\nfunction submit() {\n    let selectedCardId = sessionStorage.getItem('selectedCardId');\n    let allCardsData = JSON.parse(sessionStorage.getItem('dataAllCards'));\n    let selectedCardData = allCardsData.filter(card => card.id.toString() === selectedCardId);\n    let myHeaders = new Headers();\n    let myRequest = new Request('http://127.0.0.1:5000/receiveCard', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        mode: 'cors',\n        body: JSON.stringify(selectedCardData[0]),\n        cache: 'default',\n    });\n\n    let response = fetch(myRequest)\n        .then(resp => resp)\n        .then(data => {\n            console.log('Success: ', data);\n            submitModal(data);\n            sessionStorage.removeItem('selectedCardId');\n        })\n        .catch(error => {\n            console.log(error);\n            submitModal(error);\n        })\n}\n\n\nfunction submitModal(response) {\n    var test = response.status;\n    if (response.status === 201) {\n        var messageText = 'Your card was successfully submitted.'\n    } else if (response.status === 400) {\n        var messageText = 'You did not select a card yet. Please select a card'\n    }\n    else {\n        var messageText = 'An error occured, please try again later.'\n    }\n    let modal = document.getElementById('submitModal');\n    let span = document.getElementsByClassName('close')[0];\n    let message = document.getElementsByClassName('message')[0];\n    message.innerHTML = messageText;\n    modal.style.display = 'block';\n    span.onclick = () => modal.style.display = 'none';\n    window.onclick = event => {\n        if (event.target == modal) {\n            modal.style.display = 'none';\n        }\n    }\n}\n\nfunction compare(a ,b) {\n    if ( a.realName < b.realName ){\n        return -1;\n    }\n    if ( a.realName > b.realName ){\n        return 1;\n    }\n    return 0;\n}\n\nexport { createControls }","import {createCards, getAndSaveCardDataToSession} from \"./modules/cards.js\";\nimport {createCardOverview} from \"./modules/overview.js\";\nimport {createControls} from \"./modules/controls.js\";\n\nconst url = 'assets/players.json';\n\n\ngetAndSaveCardDataToSession()\n    .then(() => {\n        sessionStorage.removeItem('selectedCardId');\n        const cards = createCards(JSON.parse(sessionStorage.getItem('dataAllCards')));\n        createCardOverview(cards);\n        createControls(cards);\n    });\n\n\n\n\n\n\n\n"]}