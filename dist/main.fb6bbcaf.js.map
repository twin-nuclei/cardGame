{"version":3,"sources":["js/modules/details.js","js/modules/overview.js","js/modules/cards.js","js/modules/controls.js","js/main.js"],"names":["selectedCard","displayInDetailView","event","details","document","getElementById","innerText","cards","JSON","parse","sessionStorage","getItem","filter","item","id","toString","currentTarget","cardCopy","onclick","length","className","appendChild","createCardOverview","allCards","overview","getElementsByClassName","innerHTML","requestAnimationFrame","forEach","card","cardColumn","createElement","markSelectedCardAndRefreshOverview","previousSelectedCard","setItem","players","saveToSession","dataAllCards","stringify","addIdToCardData","map","player","createCard","cardData","addCardContent","listGroup","prop","element","createCards","data","requestCardData","url","Promise","resolve","reject","request","XMLHttpRequest","open","onload","response","console","log","responseText","onerror","responseType","send","getCardData","getAndSaveCardDataToSession","then","cardElements","createControls","parent","ascendingButton","createAscendingButton","descendingButton","createDescendingButton","submitButton","createSubmitButton","createButtonColumn","buttonColumn","buttonElement","button","createOverviewAscending","createOverViewDescending","submit","sortAscending","sortDescending","slice","sort","compare","reverse","selectedCardId","allCardsData","selectedCardData","myHeaders","Headers","myRequest","Request","method","headers","mode","body","cache","fetch","resp","submitModal","removeItem","catch","error","test","status","messageText","modal","span","message","style","display","window","target","a","b","realName"],"mappings":";;AIAA;;AACA;;AACA;ADFA,AHAA,ACEA,IAAIO,KAAJ;AGEA,IAAM4C,GAAG,GAAG,qBAAZ;AAGA,AFPA,ACEA,AHAA,ACEA,IEFIkB,AHAArE,KCEKsB,OEFT,AHAA,WCEA,CAA4BC,QAA5B,EAAsC,IGIjC6C,IADL,CACU,YAAM;AACR1D,AHJJH,EGIIG,AHJJH,KAAK,GAAGgB,MGIU,CAACmF,CHJnB,SGII,CAA0B,gBAA1B;AACA,AFTR,ACGA,AHAA,ACEI,MGIUnG,AHJNiB,GEFC8C,AHAArE,EIMU,GAAG,AHJN,GAAGG,MEFnB,CAAwBG,CFEG,CAACkB,EDF5B,CGAA,AHA6BvB,EGAE,GHA/B,EAAoC,EIMFM,IAAI,CAACC,KAAL,AHJf,CGI0BC,AHJM,cGIQ,AHJxC,CGIyCC,AHJxD,OGIyC,CAAuB,cAAvB,CAAX,CAAZ,CAAd;AACA,ADNJ0D,AHAA,ACEA7C,EEFA6C,AFEA7C,IDFIrB,ICEI,CAAC,CAAD,CDFG,ACEX,CEFY,AFEAuB,EDFEtB,CGACG,KAAf,CFEA,CDFsB,CAACF,CCEC,EAAxB,QGIuBE,GJNT,CAAwB,CIMlC,QJNU,CAAd;AIOI,ADNJ,AHAAJ,ACEAwB,EDFAxB,ACEAwB,IEFI4C,GHAG,CAACjE,EGAE,GAAGF,IHAb,GAAoB,CGAC,AFEA,CEFCC,AHAtB,ACEsB,QGIHE,IHJS,CGIxB,CDNS,CAAwB,cAAxB,CAAb;ACOC,ADND,AHAA,ACEIA,CGFR,GHEQA,EEFAiE,AHAAjE,GCEK,CAACqB,CDFD,GAAGpB,GCER,CDFY,ACEE,CDFDC,EGAE,GAAGgE,AHAV,CAAW/D,GCELmB,IAAI,EAAI,KDFW,CAAClB,KGAK,EAA3C,AHAuB,CAAuB,cAAvB,CAAX,CAAZ;AGCA,AHAAX,ACEQ,EDFRA,IGAI0E,IFEQ5C,IDFA,GAAGvB,GCEO,EEFF,AHAA,CAACK,ACEIR,EEFFuE,IHAR,CAAa,CCEK,CAAC5C,QDFNlB,IAAI,CCEP,CAAuB,CEFH,EAA7C,EFEyB,CAAjB;AEDR,AHDgC,ACGxBiB,MEFJ8C,AFEI9C,KDH4BjB,IAAI,CAACC,ACGvB,CAACM,CEFH,AHDoB,CAAQL,EGCzB8D,KFEX,CDH4B,ECGL,KDH4B3E,KGCtB,AHD2B,CAACc,CGCjE,GFEQ,SDHmD,CAAoBF,EAA/C;AGEhCyD,AHFgC,ACIxBzC,EEFRyC,CHFe,CAAf,ECIQzC,EEFF,CAACT,OFEW,CAACA,GEFnB,CAAmBmD,OFEX,CAAuB3C,IAAvB,GEFR;AACA0C,AHFA,ACIQ/C,EEFR+C,IHFItD,ACIIO,EEFF,CAACH,KHFK,ACII,CAAC,CAAD,CDJD,ACIP,CAAYA,EEFpB,CAAmBqD,QFEX,CAAwB5C,OEFhC,GHF0B9B,ACIlB,YDJ8B,CAAC,CAAD,CAAvB,CAAf;AENJ,ACSIuE,AFGK,EEHLA,EDTEpC,CDME,GEGE,CAACd,EDTE,GAAG,CACd,KCQE,CAAmBuD,YAAnB;ADRD,ACSF,AHHG3D,ACKO,EDLPA,CCFqB,CAArB,MDEQ,CAACC,GENE,IFMX,GAAmB,SENrB,GFM2B,CAAE,CAA3B;AEN6B,ADYhC,gBCZ8C,2BAA7C;AAA0E,ACW5E,AHJID,EAAAA,OGIK6D,CHJG,CEPyE,AFOxEhE,EAAT,GAAcP,KAAK,CAACY,KGIxB,CHJkB,EGIY,CHJG,CAA7B;AEPF,ACYE,AHJAF,ACMJ,CCfgB,CFSZA,CEPF,GCWM8D,GFEC/C,CDNG,CAACZ,OGIO,EHJhB,CGImBhB,EHJE,MGIM,CAAC2B,aAAT,AFEvB,CEF8C,AFEF7B,KEFrB,AFEvB,CEFI,CFE+C,sBDN/C;AEPD,ACYC6E,AHJA5E,ACMA,EEFA4E,AHJA5E,ICMIO,GDNG,CAACW,IERG,ACYC,CAACD,KFEK,CDNlB,ACMmBT,CDNCM,EGIpB,GAAyB,CFErB,CAAuB,CDN3B,IERF,SCYE,EFEI,CAAJ,EAA8C;ACdb,ACajC,AHJH,ACMO,QAAIgB,CEFD8C,ODbwC,KCa/C,OFE4B,CCf9B,EDeiC3E,QAAQ,CAACC,cAAT,CAAwBK,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAxB,CAA3B;ACf0D,ACcjE,AFEOsB,IAAAA,OChBmE,aDgB/C,CAACb,SAArB,GAAiC,0CAAjC;AChBN,ADiBG,CCnBW,EAGd;AAAC,ACeH,SAASqD,KDfM,eAAb,CCeF,GAAiC;ADfD,ACgB5B,AFCA,MEDIO,AFCAhF,UCjBsC,EDiB1B,CEDC,EFCEI,CEDC0E,KDhBtB,EDiB6B,CAACzE,UEDU,EAAtC,EFCmB,CAAwBH,KAAK,CAACc,aAAN,CAAoBF,EAA5C,CAAnB;ACjBuD,ACiBvD,AFCAd,EAAAA,IEDIiF,KDjB4D,CCiBtD,EFCE,CEDC7E,AFCAgB,QEDQ,CAACW,AFCtB,GAAyB,UEDZ,CAAuB,QAAvB,CAAb,sBFCA;AClBF,ACkBEkD,AFCAvE,CCtBY,CCqBZuE,AFCAvE,CClBF,KCiBQ,CAACU,OFCO,CAACc,CEDf,GAAmB,GFCnB,CAAuB,eEDvB,CFCA,EAAyChC,KAAK,CAACc,aAAN,CAAoBF,EAA7D;AClBD,ACkBCmE,AFCH,EEDGA,MAAM,CAACvD,KDlBI,ICkBX,GAAmB,aDlBrB,GCkBE;ADlBiC,ACmBjCuD,EAAAA,MAAM,CAACnE,EAAP,GAAY,EDnBmC,OCmB/C,eDnBF;AAAyE,ACoBvEmE,EAAAA,MAAM,CAAC/D,EDpByE,KCoBhF,GAAiBgE,uBAAjB;ADpBF,ACqBEF,CDzBY,CCyBZA,CDpBF,YCoBe,CAAC3D,WAAd,CAA0B4D,MAA1B;ADpBD,ACqBC,SAAOD,KDrBI,QCqBX,GDrBF;AAA0B,ACsB3B,gBDtByC,qBAAxC;AAA+D,WAAS;AAAxE,ACwBF,CD7BgB,EAMd,MCuBOL,sBAAT,GAAkC;ADvB/B,ACwBC,MAAIK,QDxBO,KCwBM,GAAGF,YDxBtB,MCwBwC,EAAtC;ADxBiC,ACyBjC,MAAIG,MAAM,GAAG7E,CDzBkC,OCyB1B,CAAC2B,GDzBxB,UCyBe,CAAuB,QAAvB,CAAb;ADzB4D,AC0B5DkD,EAAAA,MAAM,CAAC7D,ED1B8D,OC0BrE,GAAmB,mBAAnB;AD1BF,AC2BE6D,CDjCY,CAAhB,ACiCIA,MAAM,CAACvD,SAAP,GAAmB,iBAAnB;AACAuD,EAAAA,MAAM,CAACnE,EAAP,GAAY,UAAZ;ADzBJ,AC0BImE,EAAAA,MAAM,CD1BD7C,AC0BElB,OAAP,GAAiBiE,GD1BrB,CAAuB9C,YAAvB,EAAqC,MC0BjC;ADzBA3B,AC0BAsE,ED1BAtE,AC0B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","file":"main.fb6bbcaf.js","sourceRoot":"../src","sourcesContent":["import { createCard } from \"./cards.js\";\n\nlet selectedCard;\n\nfunction displayInDetailView(event) {\n    let details = document.getElementById('details');\n    details.innerText = '';\n    let cards = JSON.parse(sessionStorage.getItem('dataAllCards'));\n    selectedCard = cards.filter(item => item.id.toString() === event.currentTarget.id);\n    let cardCopy = createCard(selectedCard[0]);\n    cardCopy.onclick = () => {};\n    cardCopy.id = cards.length + 1;\n    cardCopy.className = 'cardCopy card-body border border-primary rounded';\n    details.appendChild(cardCopy);\n}\n\n\nexport { displayInDetailView };","\n\nlet cards;\n\nfunction createCardOverview(allCards) {\n    cards = allCards;\n    let overview = document.getElementsByClassName('overview-row');\n    overview[0].innerHTML = ''\n    requestAnimationFrame(() => {\n        cards.forEach(card => {\n            let cardColumn = document.createElement('div');\n            cardColumn.className = 'col-sm-4 mt-3';\n            cardColumn.appendChild(card);\n            overview[0].appendChild(cardColumn);\n\n        })});\n}\n\nfunction markSelectedCardAndRefreshOverview(event) {\n    if (sessionStorage.getItem('selectedCardId')) {\n        let previousSelectedCard = document.getElementById(sessionStorage.getItem('selectedCardId'))\n        previousSelectedCard.className = 'card h-100 border border-primary rounded';\n    }\n    let selectedCard = document.getElementById(event.currentTarget.id);\n    selectedCard.className = 'card h-100 border border-primary rounded';\n    sessionStorage.setItem('selectedCardId', event.currentTarget.id);\n}\n\n\nexport { createCardOverview, markSelectedCardAndRefreshOverview };","import {displayInDetailView} from \"./details.js\";\nimport {markSelectedCardAndRefreshOverview} from \"./overview.js\";\n\nconst players = [\n  {\"realName\": \"Brianna Forbes\", \"playerName\": \"Dreamlurk The Unstoppable\", \"asset\": \"Foghammer Lead\"},\n  {\"realName\": \"Darcy Candice Ball\", \"playerName\": \"Crystaldash\", \"asset\": \"Secret Glowquake Gold\"},\n  {\"realName\": \"Hillary Gibbs\", \"playerName\": \"Speedsoul\", \"asset\": \"Shifting Rainshadow Iron\"},\n  {\"realName\": \"Elva Becky Hammond\", \"playerName\": \"Seekvenom The Mystic\", \"asset\": \"Valkyries' Opal Adamant\"},\n  {\"realName\": \"Enid Rose\", \"playerName\": \"Coincurse The Ghoul\", \"asset\": \"Jewelevil Bronze Of Goddesses\"},\n  {\"realName\": \"Esmeralda Carrillo\", \"playerName\": \"Skulldart\", \"asset\": \"Yellow Orichalcum Of Paladins\"}\n];\n\nfunction saveToSession(dataAllCards) {\n    sessionStorage.setItem('dataAllCards', JSON.stringify(dataAllCards));\n}\n\nfunction addIdToCardData (players) {\n    return players.map((player, id) => ({\n            'id': id,\n            ...player\n        })\n    )\n}\n\nfunction createCard(cardData) {\n    let card = document.createElement('div');\n    card.className = 'card h-100 border border-primary rounded';\n    addCardContent(card, cardData);\n    card.onclick = event => { displayInDetailView(event); markSelectedCardAndRefreshOverview(event)};\n    return card;\n}\n\n\nfunction addCardContent(card, cardData) {\n    let listGroup = document.createElement('ul');\n    listGroup.className = 'list-group list-group-flush';\n    card.appendChild(listGroup);\n    for (let prop in cardData) {\n        if (prop !== 'id') {\n            let element = document.createElement('li');\n            element.innerHTML = prop + ': ' + cardData[prop];\n            card[prop] = cardData[prop];\n            element.className = 'cardElement list-group-item';\n            listGroup.appendChild(element);\n        }\n        card.id = cardData.id;\n    }\n}\n\nfunction createCards(dataAllCards) {\n    return dataAllCards.map(data => createCard(data));\n}\n\nconst requestCardData = (url) => {\n    return new Promise( function (resolve, reject) {\n        let request = new XMLHttpRequest();\n        request.open('GET', url);\n        request.onload = (response) => {\n            console.log(request);\n            resolve(JSON.parse(request.responseText));\n        };\n        request.onerror = () => reject(request.response)\n        request.responseType = 'text';\n        request.send();\n    })\n};\n\nfunction getCardData() {\n    return new Promise( function (resolve, reject) {\n        resolve(players);\n    })\n}\n\nconst getAndSaveCardDataToSession = () => {\n    return getCardData()\n        .then(dataAllCards => addIdToCardData(dataAllCards))\n        //todo: ich dachte ich muss hier json.strinify benutzen, wenn ich das aber mache, bekomm ich später nach\n        // json.parse wieder einen string zurück. Muss das nicht serialisiert werden, um es in der session zu speichern?\n        .then(dataAllCards => saveToSession(dataAllCards));\n}\n\nexport { createCard, createCards, getAndSaveCardDataToSession };","import {createCardOverview} from \"./overview.js\";\n\nlet cardElements;\n\nfunction createControls(cards) {\n    cardElements = cards;\n    let parent = document.getElementById('controls-row');\n    let ascendingButton = createAscendingButton();\n    let descendingButton = createDescendingButton();\n    let submitButton = createSubmitButton();\n    parent.appendChild(ascendingButton);\n    parent.appendChild(descendingButton);\n    parent.appendChild(submitButton);\n}\n\nfunction createButtonColumn() {\n    let buttonColumn = document.createElement('div');\n    buttonColumn.className = 'col-sm-12 mt-3';\n    return buttonColumn;\n}\n\nfunction createAscendingButton() {\n    let buttonElement = createButtonColumn();\n    let button = document.createElement('button');\n    button.className = 'btn btn-secondary';\n    button.innerHTML = \"Sort Ascending\";\n    button.id = \"sortAsc\";\n    button.onclick = createOverviewAscending;\n    buttonElement.appendChild(button);\n    return buttonElement;\n}\n\nfunction createDescendingButton() {\n    let buttonElement = createButtonColumn();\n    let button = document.createElement('button');\n    button.className = 'btn btn-secondary';\n    button.innerHTML = \"Sort Descending\";\n    button.id = \"sortDesc\";\n    button.onclick = createOverViewDescending;\n    buttonElement.appendChild(button);\n    return buttonElement;\n}\n\nfunction createSubmitButton() {\n    let buttonElement = createButtonColumn();\n    let button = document.createElement('button');\n    button.className = 'btn btn-danger';\n    button.innerHTML = \"Submit\";\n    button.id = \"submit\";\n    button.onclick = submit;\n    buttonElement.appendChild(button);\n    return buttonElement;\n}\n\nfunction createOverviewAscending() {\n    createCardOverview(sortAscending());\n}\n\nfunction createOverViewDescending() {\n\n    createCardOverview(sortDescending());\n}\n\nfunction sortAscending() {\n    return cardElements.slice().sort(compare);\n}\n\nfunction sortDescending() {\n    return sortAscending().reverse();\n}\n\nfunction submit() {\n    let selectedCardId = sessionStorage.getItem('selectedCardId');\n    let allCardsData = JSON.parse(sessionStorage.getItem('dataAllCards'));\n    let selectedCardData = allCardsData.filter(card => card.id.toString() === selectedCardId);\n    let myHeaders = new Headers();\n    let myRequest = new Request('http://127.0.0.1:5000/receiveCard', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        mode: 'cors',\n        body: JSON.stringify(selectedCardData[0]),\n        cache: 'default',\n    });\n\n    let response = fetch(myRequest)\n        .then(resp => resp)\n        .then(data => {\n            console.log('Success: ', data);\n            submitModal(data);\n            sessionStorage.removeItem('selectedCardId');\n        })\n        .catch(error => {\n            console.log(error);\n            submitModal(error);\n        })\n}\n\n\nfunction submitModal(response) {\n    var test = response.status;\n    if (response.status === 201) {\n        var messageText = 'Your card was successfully submitted.'\n    } else if (response.status === 400) {\n        var messageText = 'You did not select a card yet. Please select a card'\n    }\n    else {\n        var messageText = 'An error occured, please try again later.'\n    }\n    let modal = document.getElementById('submitModal');\n    let span = document.getElementsByClassName('close')[0];\n    let message = document.getElementsByClassName('message')[0];\n    message.innerHTML = messageText;\n    modal.style.display = 'block';\n    span.onclick = () => modal.style.display = 'none';\n    window.onclick = event => {\n        if (event.target == modal) {\n            modal.style.display = 'none';\n        }\n    }\n}\n\nfunction compare(a ,b) {\n    if ( a.realName < b.realName ){\n        return -1;\n    }\n    if ( a.realName > b.realName ){\n        return 1;\n    }\n    return 0;\n}\n\nexport { createControls }","import {createCards, getAndSaveCardDataToSession} from \"./modules/cards.js\";\nimport {createCardOverview} from \"./modules/overview.js\";\nimport {createControls} from \"./modules/controls.js\";\n\nconst url = 'assets/players.json';\n\n\ngetAndSaveCardDataToSession()\n    .then(() => {\n        sessionStorage.removeItem('selectedCardId');\n        const cards = createCards(JSON.parse(sessionStorage.getItem('dataAllCards')));\n        createCardOverview(cards);\n        createControls(cards);\n    });\n\n\n\n\n\n\n\n"]}