{"version":3,"sources":["js/modules/details.js","js/modules/overview.js","js/modules/cards.js","js/modules/controls.js","js/main.js"],"names":["selectedCard","displayInDetailView","event","details","document","getElementById","hasChildNodes","removeChild","firstChild","cards","JSON","parse","sessionStorage","getItem","filter","item","id","toString","currentTarget","cardCopy","length","className","appendChild","createCardOverview","allCards","overview","getElementsByClassName","forEach","card","markSelectedCardAndRefreshOverview","previousSelectedCard","setItem","players","saveToSession","dataAllCards","stringify","addIdToCardData","map","player","createCard","cardData","createElement","addCardContent","onclick","prop","element","innerHTML","createCards","data","requestCardData","url","Promise","resolve","reject","request","XMLHttpRequest","open","onload","response","console","log","responseText","onerror","responseType","send","getCardData","getAndSaveCardDataToSession","then","cardElements","createControls","parent","ascendingButton","createAscendingButton","descendingButton","createDescendingButton","submitButton","createSubmitButton","button","createOverviewAscending","createOverViewDescending","submit","sortAscending","sortDescending","slice","sort","compare","reverse","selectedCardId","allCardsData","selectedCardData","myHeaders","Headers","myRequest","Request","method","headers","mode","body","cache","fetch","resp","submitModal","removeItem","catch","error","test","status","messageText","modal","span","message","style","display","window","target","a","b","realName"],"mappings":";;AIAA;;AACA;;AACA;ADFA,AHAA,ACEA,IAAIS,KAAJ;AGEA,IAAMyC,GAAG,GAAG,qBAAZ;AAGA,AFPA,ACEA,AHAA,ACEA,IEFIkB,AHAApE,KCEKuB,OEFT,AHAA,WCEA,CAA4BC,QAA5B,EAAsC,IGIjC2C,IADL,CACU,YAAM;AACRvD,AHJJH,EGIIG,AHJJH,KAAK,GAAGe,MGIU,CAAC8E,CHJnB,SGII,CAA0B,gBAA1B;AACA,AFTR,ACGA,AHAA,ACEI,MGIU7F,AHJNgB,GEFC4C,AHAApE,EIMU,GAAG,AHJN,GAAGG,MEFnB,CAAwBK,CFEG,CAACiB,EDF5B,CGAA,AHA6BxB,EGAE,GHA/B,EAAoC,EIMFQ,IAAI,CAACC,KAAL,AHJf,CGI0BC,AHJM,cGIQ,AHJxC,CGIyCC,AHJxD,OGIyC,CAAuB,cAAvB,CAAX,CAAZ,CAAd;AACA,ADNJuD,AHAA,EGAAA,IHAIjE,OAAO,CGAC,EHAEC,CGACK,KAAf,EHAsB,CAACJ,WIMAI,GJNT,CAAwB,CIMlC,QJNU,CAAd;AIOI,ADNJ,AFCA,MEDI6D,GFCG7C,GEDG,GAAGrB,EFCE,CAAC,CAAD,CAAR,CAAYE,EEDE,CAACD,QCMHI,EHLZ,EAAP,CGKI,CDNS,AFCuB,CEDC,UAAxB,CAAb;ACOC,ADND,AHDA,ACEIgB,CGDR,GHCQA,EEDA8C,GHDGpE,GCEK,CAAC,CAAD,CAAR,CDFU,ACEEI,CDFDD,IGCI,GAAGkE,GFClB,CAAwB/C,EDFrB,EAAP,EAAgC,ECEI,CAACjB,QEDM,EAA3C,AFCI;AEAJ,AHDIL,ACEH,IDFGA,EGCAsE,KHDO,CAAClE,UGCQ,CHDhB,CAAoBJ,CGCDuE,MHDQ,CAAClE,UAA5B,KGCyC,EAA7C;AACA,AHDC,MGCGmE,YAAY,GAAGC,kBAAkB,EAArC;AACAN,AFAA7D,EEAA6D,AFAA7D,KAAK,CEAC,AFAAkB,CEACL,MFAP,CAAc,IEAd,CAAmBiD,KFAL3C,IAAI,MEAlB;AACA0C,AHFA,ACCkB,EEClBA,IHFI7D,EGEE,CAACa,EHFE,ACCaG,GDDVf,IAAI,CAACC,ACCa,CEC9B,AFD+B,CECZ8D,AFDW,CAAR,CAAYnD,CDDtB,CAAWV,SCCD,CAAwBgB,EEC9C,EHFqC,ACCf,CDDgBf,ACCpB,ODDK,CAAuB,cAAvB,CAAX,CAAZ;AENJ,ACSIyD,AHFAtE,ACAkB,EEElBsE,AHFAtE,CCAA,CCPEgC,ICSI,CAACV,EDTE,GAAG,AFOA,CENd,EFMiBb,GGEf,CAAmBkE,CHFC,CAAC7D,MAAN,CAAa,GGE5B,OHF4BC,IAAI;AENjC,ACSF,AHHmC,ACCnC,WDDuCA,GENzB,CFM6B,CAACC,EAAL,CAAQC,QAAR,GENtC,IFM6Df,KAAK,CAACgB,aAAN,CAAoBF,EAA/C;AENH,AFMG,GAAjB,CAAf,YEN2C,2BAA7C;AAA0E,ACW5E,AHJI,ACEJ,MDFQG,GGICqD,AFFA3C,ECT4E,GFOrE,GAAG,aGInB,GAAiC,OHJH7B,GCE9B,CAA4CE,KAA5C,EAAmD,CDFT,CAAC,CAAD,CAAvB,CAAf;AEPF,ACYE,AHJAiB,ACEA,CCXY,CFSZA,CEPF,GCWM0D,AFFAjE,IDFI,CAACI,CGIC,CHJV,EGIaZ,CHJCK,ICEI,CDFC,ACEAI,CDFCO,CGIC,CAACqB,IHJR,ACEV,CAAuB,EDFE,CAA7B,KGIa,CAAuB,OFFhC,CEES,AFFb,CEEA,CFF8C;ACT/C,ACYCoC,AHJA1D,ACEI,EEEJ0D,AHJA1D,MGIM,AFFEW,CEEDgB,CHJC,CAACzB,GERE,ICYX,EHJA,CGImB,EHJE,KCEO,GAAGjB,EDF/B,CERF,GCYE,EFFuC,CAACC,cAAT,CAAwBO,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAxB,CAA3B;ACV6B,ACajCgE,AHJA1E,ACEI2B,EEEJ+C,AHJA1E,ECEI2B,IEEE,CAACd,AHJA,CAACM,CGIR,GAAY,EDbmC,KFS/C,CAAoBH,CGIpB,CFFwB,CAACE,ICX3B,CFSE,ICEI,GAAiC,MAAjC;ACX0D,ACc9DwD,AHJH,ACEI,EEEDA,MAAM,CAAClC,EDdgE,KCcvE,GAAiBmC,uBAAjB;ADdF,ACeE,CDjBY,EAGd,MCcSD,MAAP;ADdD,ACeF,AFHG,MAAI7E,QCZO,IDYK,GAAGI,QCZrB,ADY6B,CAACC,cAAT,CAAwBH,KAAK,CAACgB,aAAN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","file":"main.fb6bbcaf.js","sourceRoot":"../src","sourcesContent":["import { createCard } from \"./cards.js\";\n\nlet selectedCard;\n\nfunction displayInDetailView(event) {\n    let details = document.getElementById('details');\n    while (details.hasChildNodes()) {\n        details.removeChild(details.firstChild);\n    }\n    let cards = JSON.parse(sessionStorage.getItem('dataAllCards'));\n    selectedCard = cards.filter(item => item.id.toString() === event.currentTarget.id);\n    let cardCopy = createCard(selectedCard[0]);\n    cardCopy.id = cards.length + 1;\n    cardCopy.className = 'cardCopy';\n    details.appendChild(cardCopy);\n}\n\n\nexport { displayInDetailView };","\n\nlet cards;\n\nfunction createCardOverview(allCards) {\n    cards = allCards;\n    let overview = document.getElementsByClassName('overview-row');\n    while (overview[0].hasChildNodes()) {\n        overview[0].removeChild(overview.firstChild);\n    }\n    cards.forEach(card => overview[0].appendChild(card));\n}\n\nfunction markSelectedCardAndRefreshOverview(event) {\n    if (sessionStorage.getItem('selectedCardId')) {\n        let previousSelectedCard = document.getElementById(sessionStorage.getItem('selectedCardId'))\n        previousSelectedCard.className = 'card';\n    }\n    let selectedCard = document.getElementById(event.currentTarget.id);\n    selectedCard.className = 'card selected';\n    sessionStorage.setItem('selectedCardId', event.currentTarget.id);\n}\n\n\nexport { createCardOverview, markSelectedCardAndRefreshOverview };","import {displayInDetailView} from \"./details.js\";\nimport {markSelectedCardAndRefreshOverview} from \"./overview.js\";\n\nconst players = [\n  {\"realName\": \"Brianna Forbes\", \"playerName\": \"Dreamlurk The Unstoppable\", \"asset\": \"Foghammer Lead\"},\n  {\"realName\": \"Darcy Candice Ball\", \"playerName\": \"Crystaldash\", \"asset\": \"Secret Glowquake Gold\"},\n  {\"realName\": \"Hillary Gibbs\", \"playerName\": \"Speedsoul\", \"asset\": \"Shifting Rainshadow Iron\"},\n  {\"realName\": \"Elva Becky Hammond\", \"playerName\": \"Seekvenom The Mystic\", \"asset\": \"Valkyries' Opal Adamant\"},\n  {\"realName\": \"Enid Rose\", \"playerName\": \"Coincurse The Ghoul\", \"asset\": \"Jewelevil Bronze Of Goddesses\"},\n  {\"realName\": \"Esmeralda Carrillo\", \"playerName\": \"Skulldart\", \"asset\": \"Yellow Orichalcum Of Paladins\"}\n];\n\nfunction saveToSession(dataAllCards) {\n    sessionStorage.setItem('dataAllCards', JSON.stringify(dataAllCards));\n}\n\nfunction addIdToCardData (players) {\n    return players.map((player, id) => ({\n            'id': id,\n            ...player\n        })\n    )\n}\n\nfunction createCard(cardData) {\n    let card = document.createElement('div');\n    card.className = 'card col';\n    addCardContent(card, cardData);\n    card.onclick = event => { displayInDetailView(event); markSelectedCardAndRefreshOverview(event)};\n    return card;\n}\n\n\nfunction addCardContent(card, cardData) {\n    for (let prop in cardData) {\n        let element = document.createElement('p');\n        if (prop !== 'id') {\n            element.innerHTML = prop + ': ' + cardData[prop];\n            card[prop] = cardData[prop];\n        }\n        element.className = 'cardElement';\n        card.id = cardData.id;\n        card.appendChild(element);\n    }\n}\n\nfunction createCards(dataAllCards) {\n    return dataAllCards.map(data => createCard(data));\n}\n\nconst requestCardData = (url) => {\n    return new Promise( function (resolve, reject) {\n        let request = new XMLHttpRequest();\n        request.open('GET', url);\n        request.onload = (response) => {\n            console.log(request);\n            resolve(JSON.parse(request.responseText));\n        };\n        request.onerror = () => reject(request.response)\n        request.responseType = 'text';\n        request.send();\n    })\n};\n\nfunction getCardData() {\n    return new Promise( function (resolve, reject) {\n        resolve(players);\n    })\n}\n\nconst getAndSaveCardDataToSession = () => {\n    return getCardData()\n        .then(dataAllCards => addIdToCardData(dataAllCards))\n        //todo: ich dachte ich muss hier json.strinify benutzen, wenn ich das aber mache, bekomm ich später nach\n        // json.parse wieder einen string zurück. Muss das nicht serialisiert werden, um es in der session zu speichern?\n        .then(dataAllCards => saveToSession(dataAllCards));\n}\n\nexport { createCard, createCards, getAndSaveCardDataToSession };","import {createCardOverview} from \"./overview.js\";\n\nlet cardElements;\n\nfunction createControls(cards) {\n    cardElements = cards;\n    let parent = document.getElementById('controls');\n    let ascendingButton = createAscendingButton();\n    let descendingButton = createDescendingButton();\n    let submitButton = createSubmitButton();\n    parent.appendChild(ascendingButton);\n    parent.appendChild(descendingButton);\n    parent.appendChild(submitButton);\n}\n\nfunction createAscendingButton() {\n    let button = document.createElement('button');\n    button.innerHTML = \"Sort Ascending\";\n    button.id = \"sortAsc\";\n    button.onclick = createOverviewAscending;\n    return button;\n}\n\nfunction createDescendingButton() {\n    let button = document.createElement('button');\n    button.innerHTML = \"Sort Descending\";\n    button.id = \"sortDesc\";\n    button.onclick = createOverViewDescending;\n    return button;\n}\n\nfunction createSubmitButton() {\n    let button = document.createElement('button');\n    button.innerHTML = \"Submit\";\n    button.id = \"submit\";\n    button.onclick = submit;\n    return button;\n}\n\nfunction createOverviewAscending() {\n    createCardOverview(sortAscending());\n}\n\nfunction createOverViewDescending() {\n\n    createCardOverview(sortDescending());\n}\n\nfunction sortAscending() {\n    return cardElements.slice().sort(compare);\n}\n\nfunction sortDescending() {\n    return sortAscending().reverse();\n}\n\nfunction submit() {\n    let selectedCardId = sessionStorage.getItem('selectedCardId');\n    let allCardsData = JSON.parse(sessionStorage.getItem('dataAllCards'));\n    let selectedCardData = allCardsData.filter(card => card.id.toString() === selectedCardId);\n    let myHeaders = new Headers();\n    let myRequest = new Request('http://127.0.0.1:5000/receiveCard', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        mode: 'cors',\n        body: JSON.stringify(selectedCardData[0]),\n        cache: 'default',\n    });\n\n    let response = fetch(myRequest)\n        .then(resp => resp)\n        .then(data => {\n            console.log('Success: ', data);\n            submitModal(data);\n            sessionStorage.removeItem('selectedCardId');\n        })\n        .catch(error => {\n            console.log(error);\n            submitModal(error);\n        })\n}\n\n\nfunction submitModal(response) {\n    var test = response.status;\n    if (response.status === 201) {\n        var messageText = 'Your card was successfully submitted.'\n    } else if (response.status === 400) {\n        var messageText = 'You did not select a card yet. Please select a card'\n    }\n    else {\n        var messageText = 'An error occured, please try again later.'\n    }\n    let modal = document.getElementById('submitModal');\n    let span = document.getElementsByClassName('close')[0];\n    let message = document.getElementsByClassName('message')[0];\n    message.innerHTML = messageText;\n    modal.style.display = 'block';\n    span.onclick = () => modal.style.display = 'none';\n    window.onclick = event => {\n        if (event.target == modal) {\n            modal.style.display = 'none';\n        }\n    }\n}\n\nfunction compare(a ,b) {\n    if ( a.realName < b.realName ){\n        return -1;\n    }\n    if ( a.realName > b.realName ){\n        return 1;\n    }\n    return 0;\n}\n\nexport { createControls }","import {createCards, getAndSaveCardDataToSession} from \"./modules/cards.js\";\nimport {createCardOverview} from \"./modules/overview.js\";\nimport {createControls} from \"./modules/controls.js\";\n\nconst url = 'assets/players.json';\n\n\ngetAndSaveCardDataToSession()\n    .then(() => {\n        sessionStorage.removeItem('selectedCardId');\n        const cards = createCards(JSON.parse(sessionStorage.getItem('dataAllCards')));\n        createCardOverview(cards);\n        createControls(cards);\n    });\n\n\n\n\n\n\n\n"]}